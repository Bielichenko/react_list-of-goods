{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","status","goods","sortAlphabetically","sortByLength","goodsCopy","reverse","sort","setState","prevState","word1","word2","length","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUWC,EAAb,4MACEC,MAAQ,CACNC,OAAQ,cACRC,MAAM,GAAD,OAAMJ,GACXK,oBAAoB,EACpBC,cAAc,GALlB,EAQED,mBAAqB,WACnB,IAAME,EAAS,YAAO,EAAKL,MAAME,OAE7B,EAAKF,MAAMG,mBACbE,EAAUC,UAEVD,EAAUE,OAGZ,EAAKC,UAAS,SAAAC,GAAS,MACrB,CACEP,MAAOG,EACPF,oBAAqBM,EAAUN,wBApBvC,EAyBEC,aAAe,WACb,IAAMC,EAAS,YAAO,EAAKL,MAAME,OAE7B,EAAKF,MAAMI,aACbC,EAAUC,UAEVD,EACGE,MAAK,SAACG,EAAeC,GAAhB,OAAmCD,EAAME,OAASD,EAAMC,UAGlE,EAAKJ,UAAS,SAAAC,GAAS,MACrB,CACEP,MAAOG,EACPD,cAAeK,EAAUL,kBAtCjC,EA2CEE,QAAU,WACR,EAAKE,UAAS,SAACC,GAAD,MAAgB,CAAEP,MAAO,YAAIO,EAAUP,OAAOI,eA5ChE,EA+CEO,MAAQ,WACN,EAAKL,SAAU,CAAEN,MAAOJ,KAhD5B,4CAmDE,WAAU,IAAD,OACP,EAA0BgB,KAAKd,MAAvBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAEhB,OACE,sBAAKa,UAAU,MAAf,UACE,wBACEC,KAAK,SACLD,UACa,gBAAXd,EACI,wBACA,0BAENgB,QAAS,kBAAM,EAAKT,SAAS,CAAEP,OAAQ,iBAPzC,mBAYA,sBACEc,UACa,gBAAXd,EACI,uBACA,qBAJR,UAOE,wBACEe,KAAK,SACLC,QAASH,KAAKX,mBAFhB,iCAOA,wBACEa,KAAK,SACLC,QAASH,KAAKV,aAFhB,4BAOA,wBACEY,KAAK,SACLC,QAASH,KAAKR,QAFhB,qBAOA,wBACEU,KAAK,SACLC,QAASH,KAAKD,MAFhB,mBAOA,oBAAIE,UAAU,QAAd,SACGb,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAEEJ,UAAU,cAFZ,SAIGI,GAHIA,kBA1GrB,GAAyBC,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.55556b1b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  status: string;\n  goods: string[];\n  sortAlphabetically: boolean;\n  sortByLength: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    status: 'not started',\n    goods: [...goodsFromServer],\n    sortAlphabetically: false,\n    sortByLength: false,\n  };\n\n  sortAlphabetically = () => {\n    const goodsCopy = [...this.state.goods];\n\n    if (this.state.sortAlphabetically) {\n      goodsCopy.reverse();\n    } else {\n      goodsCopy.sort();\n    }\n\n    this.setState(prevState => (\n      {\n        goods: goodsCopy,\n        sortAlphabetically: !prevState.sortAlphabetically,\n      }\n    ));\n  };\n\n  sortByLength = () => {\n    const goodsCopy = [...this.state.goods];\n\n    if (this.state.sortByLength) {\n      goodsCopy.reverse();\n    } else {\n      goodsCopy\n        .sort((word1: string, word2: string) => (word1.length - word2.length));\n    }\n\n    this.setState(prevState => (\n      {\n        goods: goodsCopy,\n        sortByLength: !prevState.sortByLength,\n      }\n    ));\n  };\n\n  reverse = () => {\n    this.setState((prevState) => ({ goods: [...prevState.goods].reverse() }));\n  };\n\n  reset = () => {\n    this.setState(({ goods: goodsFromServer }));\n  };\n\n  render() {\n    const { status, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          className={\n            status === 'not started'\n              ? 'button-start--visible'\n              : 'button-start--unvisible'\n          }\n          onClick={() => this.setState({ status: 'was started' })}\n        >\n          Start\n        </button>\n\n        <div\n          className={\n            status === 'not started'\n              ? 'main-part--unvisible'\n              : 'main-part--visible'\n          }\n        >\n          <button\n            type=\"button\"\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {goods.map(good => (\n              <li\n                key={good}\n                className=\"Goods__item\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}